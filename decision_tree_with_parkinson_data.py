# -*- coding: utf-8 -*-
"""Decision Tree with Parkinson Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eCRC7N5N5NwFf7_WmFWq7sCRcl81eauU
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import cross_val_score
from sklearn import tree

pk = pd.read_csv('/content/sample_data/BCSC/parkinsons.data')  # 이미 pd.DataFrame 형태로 불러와짐
pk

## scatter plot
import seaborn as sns

## x='MDVP:Fo(Hz)' (평균 기초 주파수) / y='MDVP:Fhi(Hz)' (최대 기초 주파수) / hue='status' (파킨슨병 여부, 1: 파킨슨병, 0: 건강) / style='status' (파킨슨병 여부에 따라 모양을 달리하기)
plt.figure(figsize=(7, 7))
sns.scatterplot(x='MDVP:Fo(Hz)', y='MDVP:Fhi(Hz)', hue='status', style='status', s=100, data=pk)
plt.show()

"""**1) sklearn.tree 메소드를 이용해서 의사결정나무(Decision Tree) 모델 훈련**"""

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import cross_val_score
from sklearn import tree

## getting X, y values
X = pk[['MDVP:Fo(Hz)', 'MDVP:Fhi(Hz)']]
y = pk['status']

## initiating DecisionTreeClassifer method
dt_clf = DecisionTreeClassifier(random_state = 1004)


## fitting a decision tree classifier
dt_clf_model = dt_clf.fit(X, y)


## feature importances
dt_clf_model.feature_importances_

"""**2) sklearn.tree.export_text 메소드를 이용해서 의사결정나무를 텍스트로 인쇄**"""

## Text Representation
dt_clf_model_text = tree.export_text(dt_clf_model)

print(dt_clf_model_text)

"""**3) sklearn.tree.plot_tree 메소드와 matplotlib 을 이용해서 의사결정나무 시각화**"""

## Plot Tree with plot_tree
fig = plt.figure(figsize=(15, 8))
_ = tree.plot_tree(dt_clf_model,
                  feature_names=['x1', 'x2'],
                  class_names=['0', '1'],
                  filled=True)

"""**4) sklearn.tree.export_graphviz 메소드와 graphviz 를 이용해서 의사결정나무 시각화**"""

## Visualizing Tree using Graphviz
from sklearn import tree
import graphviz

## exporting tree in DOT format
## refer to: https://scikit-learn.org/stable/modules/generated/sklearn.tree.export_graphviz.html
tree_dot = tree.export_graphviz(
    dt_clf_model,
    feature_names=['x1', 'x2'],
    class_names=['0', '1'],
    filled=True
)


## draw graph using Graphviz
dt_graph = graphviz.Source(tree_dot, format='png')
dt_graph